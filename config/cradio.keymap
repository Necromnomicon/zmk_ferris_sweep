/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


/* key assignments
  0  1  2  3  4       5  6  7  8  9
  10 11 12 13 14      15 16 17 18 19
  20 21 22 23 24      25 26 27 28 29
            30 31     32 33
*/

#define ALPHA 0
#define NAV 1
#define NUM 2
#define SYM 3
#define FUN 4
#define GAME 5
#define GAME2 6

&sk {
    ignore-modifiers; //allows for calum-style modifers 
};
  
/ { 
  combos {
        #include "combos.dtsi"    //this directs to a list of combos
    };
   
        //this gives quick relese to any sticky key if it's labled &skq 
   behaviors {
      skq: sticky_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        label = "STICKY_KEY_QUICK_RELEASE";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <300>;
        quick-release;
        };
    };
		// tap = dot, tap+shift = colon
	behaviors {
		dot_colon: dot_colon {
			compatible = "zmk,behavior-mod-morph";
			label = "dot_colon";
			#binding-cells = <0>;
			bindings = <&kp DOT>, <&kp COLON>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
			
		};
	};
		// tap = comma, tap+shift = semi colon
	behaviors {
		com_semi: com_semi {
			compatible = "zmk,behavior-mod-morph";
			label = "com_semi";
			#binding-cells = <0>;
			bindings = <&kp COMMA>, <&kp SEMICOLON>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
			keep-mods = <0>;
		};
	};
	
		//tap =question mark, tap + shift = exlimation mark 
	behaviors {
		ques_excl: ques_excl {
			compatible = "zmk,behavior-mod-morph";
			label = "ques_excl";
			#binding-cells = <0>;
			bindings = <&kp QMARK>, <&kp EXCL>;
			mods = <(MOD_LSFT|MOD_RSFT)>;
		};
	};

	behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <280>;    // <---[[moderate duration]]
            quick-tap-ms = <125>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
};    


/{
        keymap {
                compatible = "zmk,keymap";
                
       		alpha_layer {
		bindings = <
		&kp Q 		&kp W 		&kp F 		 &kp P 		  &kp B 			&kp J &kp L 	   &kp U 		&kp Y 		&kp APOS 
		&bhm LGUI A &bhm LALT R &bhm LCTRL S &bhm LSHFT T &kp G 			&kp M &bhm LSHFT N &bhm LCTRL E &bhm LALT I &bhm LGUI O
		&kp Z 		&kp X 		&kp C 		 &kp D 		  &kp V				&kp K &kp H 	   &com_semi    &dot_colon  &ques_excl
          									  &sl NAV &skq LSHFT            &lt SYM SPC &sl NUM
		>;
		};

       		nav_layer {
		bindings = <
        &none &none &none &none &none       						&kp INS	&kp PG_DN &kp PG_UP &kp BSPC &kp DEL
     	&sk LGUI  &sk LALT  &sk LCTRL  &sk LSHFT   &kp LC(G)  		&kp LEFT &kp DOWN &kp UP &kp RIGHT &kp ENTER
        &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V)  &kp K_APP          &kp HOME &kp TAB  &none	 &kp END   i &none
                                            &none &skq LSHFT        &skq LS(LC(LALT)) &trans
        >;
		};
		
		    num_layer {
		bindings = <
		&none &kp N7 &kp N8 &kp N9 &none 						&none &none &none &none &none 
		&kp N0 &kp N4 &kp N5 &kp N6 &none						&none &sk LSHIFT &sk LCTRL &sk LALT &sk LGUI
		&none &kp N1 &kp N2  &kp N3 &none						&none &none &none &none &none 
							&sl NAV &skq LSHFT                   &lt SYM SPC &sl NUM
		>;
		};	

		
		    sym_layer {
		bindings = <
		&kp ESC   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    	&kp EQUAL  &kp LC(LEFT)  &kp CARET &kp LC(RIGHT) &none 
		&kp GRAVE &kp LBKT  &kp LBRC  &kp LPAR  &kp LT 	        &kp PLUS   &kp AMPS      &kp ASTRK &kp COLON     &kp SEMI
		&kp TILDE &kp RBKT  &kp RBRC  &kp RPAR  &kp GT   		&kp MINUS  &kp UNDER     &kp BSLH  &kp PIPE      &kp SLASH
					                	&trans  &sl FUN      	&trans &trans 
		>;
		};	

            fun_layer {
		bindings = <
		&bt BT_CLR   &none        &none        &none        &bootloader     &bootloader  &kp F7  &kp F8  &kp F9 &kp F10
		&sk LGUI     &sk LALT     &sk LCTRL    &sk LSHFT    &sys_reset      &sys_reset   &kp F4  &kp F5  &kp F6 &kp F11
		&bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0 &none      		&none 		 &kp F1  &kp F2  &kp F3 &kp F12  
					                    &none &none                   		&none &none
		>;
		};
    
            game_layer {
		bindings = <
		&kp TAB   &kp Q  &kp W  &kp E  &kp R 					    &kp Y &kp U &kp I &kp O &kp P 
		&kp LCTRL &kp A  &kp S  &kp D  &kp F 			        	&kp H &kp J &kp K &kp L &kp RET
		&kp LSHFT &kp Z  &kp X  &kp C  &kp V				        &kp B &kp N &kp M &kp SLASH &kp ESC
          				&sl GAME2 &kp SPACE                   &kp LCTRL &kp LSHIFT
		>;
		};

            game2_layer {
		bindings = <
		&kp N6    &kp N7 &kp N8 &kp N9 &kp N0						&kp F6 &kp F7 &kp F8 &kp F9 &kp F10 
		&kp N1    &kp N2 &kp N3 &kp N4 &kp N5			        	&kp F1 &kp F2 &kp F3 &kp F4 &kp F5
		&sk LALT  &kp T  &kp G  &kp B  &kp M 				        &kp F11 &kp F12 &kp COMMA &kp DOT &kp SLASH
          				&trans &kp SPACE                        &kp SPC &kp ESC
		>;
		};
	};
};
